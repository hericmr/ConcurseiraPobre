{"version":3,"sources":["components/Navbar.js","components/Header.js","components/QuestionCard.js","components/SimuladoForm.js","components/Footer.js","components/Popup.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","React","createElement","className","href","Header","QuestionCard","_ref","question","index","feedback","setFeedback","useState","selectedAnswer","setSelectedAnswer","isAnswered","setIsAnswered","cargo","id_concurso","id","slice","extractAno","questão","Object","entries","alternativas","map","_ref2","letter","text","key","resposta_correta","onClick","style","backgroundColor","color","checkAnswer","disabled","SimuladoForm","cargoOptions","setCargoOptions","selectedCargo","setSelectedCargo","numQuestions","setNumQuestions","questions","setQuestions","totalQuestions","setTotalQuestions","isLoading","setIsLoading","errorMessage","setErrorMessage","useEffect","async","response","fetch","cargoList","json","error","console","fetchCargos","onSubmit","e","preventDefault","length","selectedQuestions","filteredData","limit","Math","min","i","randomIndex","floor","random","push","splice","htmlFor","value","onChange","target","cargoFile","loadedQuestions","loadCargoData","keys","type","Number","max","item","Footer","isVisible","setIsVisible","handleScroll","window","scrollY","addEventListener","removeEventListener","rel","Popup","message","onClose","showQRCode","setShowQRCode","onMouseEnter","onMouseLeave","QRCodeCanvas","size","src","alt","App","showPopup","setShowPopup","timer","setTimeout","clearTimeout","closePopup","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.eac70419.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"bg-gradient-to-r from-gray-700 to-gray-900 p-3 shadow-lg\">\r\n      <div className=\"container mx-auto flex justify-between items-center\">\r\n        <button className=\"text-xl font-bold text-white hover:text-yellow-300 transition duration-300\">\r\n          Concurseira Pobre\r\n        </button>\r\n        <ul className=\"flex space-x-4\">\r\n          <li>\r\n            <a\r\n              href=\"#download\"\r\n              className=\"text-white hover:text-yellow-300 transition duration-300 text-sm\"\r\n            >\r\n              Sobre o site\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","// Header.js\r\nimport React from \"react\";\r\n\r\nconst Header = () => (\r\n  <header className=\"text-center py-6 bg-gradient-to-r from-blue-80 to-white shadow-md\">\r\n    <p className=\"text-gray-800 text-base md:max-w-xl mx-auto\">\r\n      Plataforma gratuita para te ajudar no estudo para concursos em São Paulo. Acesse aqui uma vasta coleção de questões de provas realizadas pela banca Avança SP, totalmente grátis.\r\n    </p>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\n\r\nconst QuestionCard = ({ question, index }) => {\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\");\r\n  const [isAnswered, setIsAnswered] = useState(false);\r\n\r\n  const checkAnswer = () => {\r\n    setIsAnswered(true);\r\n    if (selectedAnswer === question.resposta_correta) {\r\n      setFeedback(\"Correto!\");\r\n    } else {\r\n      setFeedback(`Incorreto! A resposta correta é: ${question.resposta_correta}`);\r\n    }\r\n  };\r\n\r\n  // Extrai as últimas 4 letras do id_concurso para exibir como ano\r\n  const extractAno = (id) => id.slice(-4);\r\n\r\n  return (\r\n    <div className=\"bg-white p-8 rounded-lg shadow-lg mt-6 border border-gray-200\">\r\n      <div className=\"flex flex-wrap gap-x-6 text-gray-700 font-medium mb-6\">\r\n        <h5 className=\"text-lg font-semibold\">Cargo: {question.cargo}</h5>\r\n        <p><strong>Edital:</strong> {question.id_concurso}</p>\r\n        <p><strong>Ano:</strong> {extractAno(question.id_concurso)}</p>\r\n        <p><strong>Banca:</strong> Avança-SP</p>\r\n      </div>\r\n\r\n      <div className=\"mb-4\"></div>\r\n      \r\n      <p className=\"text-gray-800 font-medium mb-6 text-xl leading-relaxed\">\r\n        {index + 1}. {question.questão}\r\n      </p>\r\n\r\n      <div className=\"space-y-4\">\r\n        {Object.entries(question.alternativas).map(([letter, text]) => (\r\n          <div\r\n            key={letter}\r\n            className={`flex items-center cursor-pointer transition-all duration-200 ${\r\n              isAnswered && letter === question.resposta_correta\r\n                ? \"bg-green-100 border border-green-500\"\r\n                : \"\"\r\n            }`}\r\n            onClick={() => {\r\n              if (!isAnswered) {\r\n                setSelectedAnswer(letter);\r\n              }\r\n            }}\r\n          >\r\n              <label\r\n                className={`flex items-center justify-center w-7 h-7 rounded-full border-2 transition-all duration-200 ${\r\n                  selectedAnswer === letter ? \"border-black text-black\" : \"border-black text-black\"\r\n                }`}\r\n                style={{\r\n                  backgroundColor: selectedAnswer === letter ? \"black\" : \"transparent\",\r\n                  color: selectedAnswer === letter ? \"white\" : \"inherit\",\r\n                }}\r\n              >\r\n                {letter}\r\n              </label>\r\n\r\n            <span className={`ml-3 text-lg ${selectedAnswer === letter ? \"text-black\" : \"text-gray-700\"}`}>\r\n              {text}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button\r\n        onClick={checkAnswer}\r\n        className=\"mt-6 w-full bg-gray-600 text-white font-semibold py-3 rounded-lg hover:bg-gray-700 transition-colors\"\r\n        disabled={isAnswered}\r\n      >\r\n        Verificar Resposta\r\n      </button>\r\n\r\n      {feedback && (\r\n        <p className={`mt-4 text-center font-semibold text-lg ${feedback === \"Correto!\" ? \"text-green-500\" : \"text-red-500\"}`}>\r\n          {feedback}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport QuestionCard from \"./QuestionCard\";\r\n\r\nconst SimuladoForm = () => {\r\n  const [cargoOptions, setCargoOptions] = useState({});\r\n  const [selectedCargo, setSelectedCargo] = useState(\"\");\r\n  const [numQuestions, setNumQuestions] = useState(1);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [totalQuestions, setTotalQuestions] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  // Carrega a lista de cargos ao montar o componente\r\n  useEffect(() => {\r\n    const fetchCargos = async () => {\r\n      setIsLoading(true);\r\n      setErrorMessage(\"\"); // Reseta a mensagem de erro\r\n      try {\r\n        const response = await fetch(\r\n          `https://raw.githubusercontent.com/hericmr/ConcurseiraPobre/master/public/mapa_cargos.json`\r\n        );\r\n        const cargoList = await response.json();\r\n        \r\n        // Armazena a lista de cargos e seus arquivos JSON\r\n        setCargoOptions(cargoList);\r\n      } catch (error) {\r\n        console.error(\"Erro ao carregar a lista de cargos:\", error);\r\n        setErrorMessage(\"Erro ao carregar a lista de cargos. Tente novamente mais tarde.\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCargos();\r\n  }, []);\r\n\r\n  // Carrega o JSON de questões para o cargo selecionado\r\n  const loadCargoData = async (cargo) => {\r\n    setIsLoading(true);\r\n    setErrorMessage(\"\"); // Reseta a mensagem de erro\r\n    try {\r\n      // Busca o nome do arquivo JSON correspondente ao cargo selecionado\r\n      const cargoFile = cargoOptions[cargo];\r\n      if (!cargoFile) {\r\n        setErrorMessage(\"Cargo selecionado não é válido.\");\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(\r\n        `https://raw.githubusercontent.com/hericmr/ConcurseiraPobre/master/cargos_json/${cargoFile}`\r\n      );\r\n      const cargoData = await response.json();\r\n      const loadedQuestions = cargoData[cargo] || [];\r\n      setQuestions(loadedQuestions); // Carrega as questões para o cargo\r\n      setTotalQuestions(loadedQuestions.length);\r\n    } catch (error) {\r\n      console.error(\"Erro ao carregar os dados do cargo:\", error);\r\n      setErrorMessage(\"Erro ao carregar as questões para o cargo selecionado. Tente novamente.\");\r\n      setQuestions([]);\r\n      setTotalQuestions(0);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Gera as questões aleatórias para o simulado\r\n  const handleGenerateQuestions = (e) => {\r\n    e.preventDefault();\r\n    if (!selectedCargo || questions.length === 0 || numQuestions <= 0) return;\r\n\r\n    const selectedQuestions = [];\r\n    const filteredData = [...questions];\r\n\r\n    // Garante que o número de questões não exceda o total disponível\r\n    const limit = Math.min(numQuestions, filteredData.length);\r\n\r\n    for (let i = 0; i < limit; i++) {\r\n      const randomIndex = Math.floor(Math.random() * filteredData.length);\r\n      selectedQuestions.push(filteredData[randomIndex]);\r\n      filteredData.splice(randomIndex, 1);\r\n    }\r\n    setQuestions(selectedQuestions);\r\n  };\r\n\r\n  return (\r\n    <section className=\"container mx-auto mt-8\">\r\n      <form onSubmit={handleGenerateQuestions} className=\"bg-white p-6 shadow rounded mx-auto max-w-lg\">\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"cargo\" className=\"block text-gray-700\">\r\n            Selecione o Cargo:\r\n          </label>\r\n          <select\r\n            id=\"cargo\"\r\n            className=\"border border-gray-300 rounded p-2 w-full\"\r\n            value={selectedCargo}\r\n            onChange={(e) => {\r\n              setSelectedCargo(e.target.value);\r\n              loadCargoData(e.target.value); // Carrega o JSON do cargo selecionado\r\n            }}\r\n            disabled={isLoading}\r\n          >\r\n            <option value=\"\">Selecione...</option>\r\n            {Object.keys(cargoOptions).map((cargo) => (\r\n              <option key={cargo} value={cargo}>\r\n                {cargo}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"numero-questoes\" className=\"block text-gray-700\">\r\n            Número de Questões:\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"numero-questoes\"\r\n            className=\"border border-gray-300 rounded p-2 w-full\"\r\n            value={numQuestions}\r\n            onChange={(e) => setNumQuestions(Number(e.target.value))}\r\n            min=\"1\"\r\n            max={totalQuestions} // Limita o máximo ao número de questões disponíveis\r\n            disabled={isLoading}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"bg-gray-700 text-white px-4 py-2 rounded\" disabled={isLoading}>\r\n          {isLoading ? \"Carregando...\" : \"Gerar Simulado\"}\r\n        </button>\r\n      </form>\r\n      {errorMessage && <p className=\"text-red-500 text-center\">{errorMessage}</p>} {/* Mensagem de erro */}\r\n      <p className=\"text-center text-gray-700 mb-4\">\r\n        Foram encontradas {totalQuestions} questões para o cargo selecionado.\r\n      </p>\r\n      {isLoading ? (\r\n        <p className=\"text-center\">Carregando questões, por favor aguarde...</p>\r\n      ) : (\r\n        <div className=\"mt-6\">\r\n          {questions.length > 0 ? (\r\n            questions.map((item, index) => (\r\n              <QuestionCard key={index} question={item} index={index} />\r\n            ))\r\n          ) : (\r\n            <p className=\"text-center\">Nenhuma questão para exibir</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SimuladoForm;\r\n","// Footer.js\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Footer = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const handleScroll = () => {\r\n    // Mostrar o footer se a página for rolada\r\n    if (window.scrollY > 100) {\r\n      setIsVisible(true);\r\n    } else {\r\n      setIsVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <footer\r\n      className={`fixed bottom-0 left-0 right-0 text-center p-4 bg-gray-800 text-gray-200 shadow-lg transition-opacity duration-300 ${isVisible ? 'opacity-100' : 'opacity-0 pointer-events-none'}`}\r\n    >\r\n      <p>\r\n        &copy; 2024 Concurseira Pobre, feito por{\" \"}\r\n        <a\r\n          href=\"https://hericmr.github.io/me\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"text-blue-400 hover:underline\"\r\n        >\r\n          Héric Moura\r\n        </a>\r\n      </p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\nimport { QRCodeCanvas } from 'qrcode.react';\r\n\r\nconst Popup = ({ message, onClose }) => {\r\n  const [showQRCode, setShowQRCode] = useState(false);\r\n\r\n  // Payload completo do PIX\r\n  const pixPayload = \"00020126440014BR.GOV.BCB.PIX0122heric.moura@unifesp.br5204000053039865802BR5921Heric Moura Rodrigues6009SAO PAULO62140510gOdDMBLKbG6304C082\";\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-lg p-6 max-w-sm mx-auto transform transition-transform duration-300 popup-enter\">\r\n        <h2 className=\"text-lg font-bold mb-2 text-center\">Apoie o site!</h2>\r\n        \r\n        <p className=\"text-center\">{message}</p>\r\n\r\n        <div \r\n          className=\"w-30 h-30 object-cover rounded-full transition-transform transform hover:scale-110 duration-300 flex justify-center mt-4\"\r\n          onMouseEnter={() => setShowQRCode(true)}\r\n          onMouseLeave={() => setShowQRCode(false)}\r\n        >\r\n          {showQRCode ? (\r\n            <QRCodeCanvas value={pixPayload} size={128} />\r\n          ) : (\r\n            <img \r\n              src={`${process.env.PUBLIC_URL}/1730559014437.png`}\r\n              alt=\"Imagem pedindo apoio\"\r\n              className=\"w-30 h-30 object-cover rounded-full\"\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <p className=\"text-center mt-2 text-sm\">Faça um PIX para: heric.moura@unifesp.br</p>\r\n\r\n        <button \r\n          onClick={onClose} \r\n          className=\"mt-4 bg-blue-500 text-white font-semibold py-2 px-4 rounded-lg hover:bg-blue-600 transition-colors duration-200\"\r\n        >\r\n          Fechar\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","// App.js\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport SimuladoForm from \"./components/SimuladoForm\";\nimport Footer from \"./components/Footer\";\nimport Popup from \"./components/Popup\"; // Certifique-se de importar o componente Popup\n\nfunction App() {\n  const [showPopup, setShowPopup] = useState(false);\n\n  // Função para fechar o popup\n  const closePopup = () => {\n    setShowPopup(false);\n  };\n\n  // Use useEffect para mostrar o popup após 3 minutos (180000 ms)\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowPopup(true);\n    }, 180000); // Exibe o popup após 3 minutos\n\n    return () => clearTimeout(timer); // Limpa o timer quando o componente é desmontado\n  }, []);\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gray-100\">\n      <Navbar />\n      <Header />\n      <SimuladoForm />\n      <Footer />\n\n      {showPopup && (\n        <Popup \n          message=\"Concurseira Pobre é e sempre será gratuito! Ao contrário de muitos sites por aí que cobram para acesso a questões. Fique à vontade para usar tudo de graça e, se esse conteúdo te ajudou, considere fazer um PIX de qualquer valor para o programador do site, que também é um concurseiro pobre!\"\n          onClose={closePopup}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}